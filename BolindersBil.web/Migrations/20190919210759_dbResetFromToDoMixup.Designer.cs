// <auto-generated />
using System;
using BolindersBil.web.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BolindersBil.web.Migrations
{
    [DbContext(typeof(BolindersBilDatabaseContext))]
    [Migration("20190919210759_dbResetFromToDoMixup")]
    partial class dbResetFromToDoMixup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BolindersBil.web.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LogoUrl");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("BolindersBil.web.Models.Dealership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Dealership");
                });

            modelBuilder.Entity("BolindersBil.web.Models.FileUpload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FilePath");

                    b.Property<Guid>("FileTitle");

                    b.Property<int>("VehicleId");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("FileUpload");
                });

            modelBuilder.Entity("BolindersBil.web.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attributes");

                    b.Property<string>("Body")
                        .IsRequired();

                    b.Property<int>("BrandId");

                    b.Property<string>("Color")
                        .IsRequired();

                    b.Property<DateTime?>("DateAdded");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<int>("DealerShipId");

                    b.Property<int>("FileUploadId");

                    b.Property<string>("Fuel")
                        .IsRequired();

                    b.Property<string>("Horsepower")
                        .IsRequired();

                    b.Property<string>("ImageUrl");

                    b.Property<bool>("Lease");

                    b.Property<double>("Mileage");

                    b.Property<string>("Model")
                        .IsRequired();

                    b.Property<string>("ModelDescription")
                        .IsRequired();

                    b.Property<decimal>("Price");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired();

                    b.Property<string>("Transmission")
                        .IsRequired();

                    b.Property<bool>("Used");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("DealerShipId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("BolindersBil.web.Models.FileUpload", b =>
                {
                    b.HasOne("BolindersBil.web.Models.Vehicle", "Vehicle")
                        .WithMany("FileUpload")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BolindersBil.web.Models.Vehicle", b =>
                {
                    b.HasOne("BolindersBil.web.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BolindersBil.web.Models.Dealership", "Dealership")
                        .WithMany()
                        .HasForeignKey("DealerShipId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
